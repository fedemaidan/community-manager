<?php

namespace CM\Bundle\ModelBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Persistence\Mapping\RuntimeReflectionService;
use FS\SolrBundle\Doctrine\Annotation as Solr;
use CM\Bundle\ModelBundle\Doctrine\Annotation as SolrCustom;

/**
 * @Solr\Document
 * @ORM\Entity(repositoryClass="CM\Bundle\ModelBundle\Entity\PostRepository")
 * @ORM\Table(name="post")
 *  
 */


class Post  implements TaggeableInterface {

       /**
        *
        * @var integer
        * 
        * @Solr\Id
        * @Solr\Field(type="integer")
        * @ORM\Column(name="id", type="integer")
        * @ORM\Id
        * @ORM\GeneratedValue(strategy="AUTO")
        * 
        */
       private $id;
       
       /**
        *
        * @var string
        *
        * @ORM\Column(name="facebook_id", type="string")
        *
        */
       private $facebook_id;
       

       /**
        *
        * @var string
        *
        * @ORM\Column(name="object_id", type="string",nullable=true)
        *
        */
       private $object_id;
        
       
       
       /**
        *  
        * @ORM\OneToMany(targetEntity="Comment", mappedBy="post", fetch="EXTRA_LAZY")
        *   
        */
       
       private $comentarios;
       
       /**
        * 
        * @var string
        * @ORM\Column(name="contenido", type="string", length=800, nullable=true)
        * 
        */
       
       private $contenido;
       
       /**
        *  
        * @var string
        * @ORM\Column(name="titulo", type="string", length=100, nullable=true)
        */
       
       private $titulo;
       
       /**
        * 
        * 
        * @var string
        * 
        * @Solr\Field(type="string")
        * @ORM\Column(name="fecha_de_creacion",type="string", nullable=true)
        * 
        */
       private $fechaDeCreacion;

       /**
        * 
        * @var string
        * 
        * @ORM\Column(name="type",type="string", nullable=true)
        *
        */
       
       private $type;
       
       /**
        *
        * @var string
        * @Solr\Field(type="string")
        * @ORM\Column(name="updated_time",type="string", nullable=true)
        *
        */
        
       private $updatedTime;
       
       /**
        *
        * @var string
        *
        * @ORM\Column(name="ultimoComentario", type="string", length=255, nullable=true)
        */
       
       private $ultimoComentario;
       
              

       /**
        * @ORM\ManyToMany(targetEntity="Tag")
        * @ORM\JoinTable(name="post_tag",
        *      joinColumns={@ORM\JoinColumn(name="post_id", referencedColumnName="id")},
        *      inverseJoinColumns={@ORM\JoinColumn(name="tag_id", referencedColumnName="id")}
        *      )
        */
       
       private $tags;
       
       
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="message", type="string", length=1000, nullable=true)
        */
       
       private $message;
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="caption", type="string", length=255, nullable=true)
        */
       
       private $caption; /*The caption of a link in the post*/
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="description", type="string", length=255, nullable=true)
        */
       
       
       private $description; /*A description of a link in the post */
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="link", type="string", length=255, nullable=true)
        */
       
       
       private $link; /*The link attached to this post.*/
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="story", type="string", length=255, nullable=true)
        */
           
       
       
       private $story;/* Text from stories not fentionally generated by users, such as those generated when two people become friends, or when someone else posts on the person's wall.*/
       
       /**
        *
        * @var string
        * @Solr\Field(type="text")
        * @ORM\Column(name="nameExtra", type="string", length=255, nullable=true)
        */
       
       private $nameExtra;
       
       /**
        *
        * @var string
        * @ORM\Column(name="likes", type="text", nullable=true)
        */
        
       private $likes;
       
       /**
        *
        * @var string
        * @ORM\Column(name="cantidadLikes", type="string", nullable=true)
        */
       
       private $cantidadLikes; 
       
       /**
        *
        * @var string
        * @ORM\Column(name="shared", type="text", nullable=true)
        */
        
       private $shared;
        
       /**
        *
        * @var string
        * @ORM\Column(name="cantidadShared", type="string", nullable=true)
        */
        
       private $cantidadShared; 
       
       /**
        *
        * @var bool
        * @ORM\Column(name="actualizarLikes", type="boolean", nullable=true)
        */
       
       private $actualizarLikes;// TODO deprecated
        
       /**
        * @var bool
        * @ORM\Column(name="actualizarShared", type="boolean", nullable=true)
        */
        
       private $actualizarShared; // TODO deprecated
       
       
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->comentarios = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set contenido
     *
     * @param string $contenido
     * @return Post
     */
    public function setContenido($contenido)
    {
        $this->contenido = $contenido;

        return $this;
    }

    /**
     * Get contenido
     *
     * @return string 
     */
    public function getContenido()
    {
    	$respuesta = "Contenido no cargado";
    	switch ($this->getType()) {
    		case "status":
    			$respuesta = $this->getStory();
    			$respuesta .= $this->getMessage();
    			break;
    		case "photo":
    			$respuesta = "";
    			$respuesta .= $this->getStory();
    			$respuesta .= $this->getMessage();
    			break;
    		case "video":
    			//$respuesta = "(Video) ";
    			$respuesta = $this->getStory();
    			$respuesta .= $this->getMessage();
    			break;
    		case "link":
    			//$respuesta = "(Link) ";
    			$respuesta = $this->getStory();
    			$respuesta .= $this->getMessage();
    			
    			break;
    	}
    	
    	
        return $respuesta;
    }

    /**
     * Set titulo
     *
     * @param string $titulo
     * @return Post
     */
    public function setTitulo($titulo)
    {
        $this->titulo = $titulo;

        return $this;
    }

    /**
     * Get titulo
     *
     * @return string 
     */
    public function getTitulo()
    {
        return $this->titulo;
    }

    /**
     * Set fechaDeCreacion
     *
     * @param \DateTime $fechaDeCreacion
     * @return Post
     */
    public function setFechaDeCreacion($fechaDeCreacion)
    {
        $this->fechaDeCreacion = $fechaDeCreacion;

        return $this;
    }

    /**
     * Get fechaDeCreacion
     *
     * @return string
     */
    public function getFechaDeCreacion()
    {
        return $this->fechaDeCreacion;
    }

    /**
     * Set updatedTime
     *
     * @param \DateTime $updatedTime
     * @return Post
     */
    public function setUpdatedTime($time)
    {
    	$this->updatedTime = $time;
    
    	return $this;
    }
    
    /**
     * Get updatedTime
     *
     * @return string
     */
    public function getUpdatedTime()
    {
    	return $this->updatedTime;
    }
    
    /**
     * Set likes
     *
     * @param string $likes
     * @return Post
     */
    public function setLikes($likes)
    {
        $this->likes = $likes;

        return $this;
    }

    /**
     * Get likes
     *
     * @return string 
     */
    public function getLikes()
    {
        return $this->likes;
    }

    /**
     * Set share
     *
     * @param string $share
     * @return Post
     */
    public function setShare($share)
    {
        $this->share = $share;

        return $this;
    }

    /**
     * Get share
     *
     * @return string 
     */
    public function getShare()
    {
        return $this->share;
    }

    /**
     * Add comentario
     *
     * @param \CM\Bundle\ModelBundle\Entity\Comment $comentarios
     * @return Post
     */
    public function addComentario(\CM\Bundle\ModelBundle\Entity\Comment $comentario)
    {
        $this->comentarios[] = $comentario;

        return $this;
    }

    /**
     * Remove comentario
     *
     * @param \CM\Bundle\ModelBundle\Entity\Comentario $comentarios
     */
    public function removeComentario(\CM\Bundle\ModelBundle\Entity\Comment $comentario)
    {
        $this->comentarios->removeElement($comentario);
    }

    /**
     * Get comentarios
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getComentarios()
    {
        return $this->comentarios;
    }

    /**
     *  Get comentarios paginados -- evita cargar demasiados objetos comentarios
     *  
     *  @return \Doctrine\Common\Collections\Collection 
     */
    
    public function getComentariosPaginados($offset, $length) {
    	return $this->comentarios->slice($offset,$length);
    }
    
    /**
     *
     * @var integer
     * @SolrCustom\FieldObject(type="integer")
     * @ORM\ManyToOne(targetEntity="FanPage")
     * @ORM\JoinColumn(name="fan_page_id", referencedColumnName="id")
     */
    
    private $fanPage;

    /**
     * Set fan_page
     *
     * @param \CM\Bundle\ModelBundle\Entity\FanPage $fan_page
     * @return Post
     */
    public function setFanPage(\CM\Bundle\ModelBundle\Entity\FanPage $fanPage = null)
    {
        $this->fanPage = $fanPage;

        return $this;
    }

    /**
     * Get fan_page
     *
     * @return \CM\Bundle\ModelBundle\Entity\FanPage 
     */
    public function getFanPage()
    {
        return $this->fanPage;
    }


    /**
     * Add tags
     *
     * @param \CM\Bundle\ModelBundle\Entity\Tag $tags
     * @return Post
     */
    public function addTag(\CM\Bundle\ModelBundle\Entity\Tag $tags)
    {
    	$this->tags[] = $tags;
    
    	return $this;
    }
    
    /**
     * Remove tags
     *
     * @param \CM\Bundle\ModelBundle\Entity\Tag $tags
     */
    public function removeTag(\CM\Bundle\ModelBundle\Entity\Tag $tags)
    {
    	$this->tags->removeElement($tags);
    }
    
    /**
     * Add/Remove tag
     *
     * @param CM\Bundle\ModelBundle\Tag $tag
     * @param boolean $remove
     * @return Post
     */
    public function tag(\CM\Bundle\ModelBundle\Entity\Tag $tag, $remove = false) {
    	if($remove) {
    		$this->removeTag($tag);
    	} else {
    		$this->addTag($tag);
    	}
    }
    
    public function setFacebookId( $facebookId ) {
    	$this->facebook_id = $facebookId;
    	return $this;
    }
    public function getFacebookId( ) {
    	 return $this->facebook_id;
    }
    
    public function getType(){
    	return $this->type;
    }
    public function setType($type) {
    	$this->type = $type;
    	return $this;
    }
    

    /**
     * Set ultimoComentario
     *
     * @param string $ultimoComentario
     * @return Post
     */
    public function setUltimoComentario($ultimoComentario)
    {
    	$this->ultimoComentario = $ultimoComentario;
    
    	return $this;
    }
    
    /**
     * Get ultimoComentario
     *
     * @return string
     */
    public function getUltimoComentario()
    {
    	return $this->ultimoComentario;
    }
    

    /**
     * Set message
     *
     * @param string $message
     * @return Post
     */
    public function setMessage($message)
    {
        $this->message = $message;

        return $this;
    }

    /**
     * Get message
     *
     * @return string 
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Set caption
     *
     * @param string $caption
     * @return Post
     */
    public function setCaption($caption)
    {
        $this->caption = $caption;

        return $this;
    }

    /**
     * Get caption
     *
     * @return string 
     */
    public function getCaption()
    {
        return $this->caption;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Post
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set link
     *
     * @param string $link
     * @return Post
     */
    public function setLink($link)
    {
        $this->link = $link;

        return $this;
    }

    /**
     * Get link
     *
     * @return string 
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * Get tags
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * Set story
     *
     * @param string $story
     * @return Post
     */
    public function setStory($story)
    {
        $this->story = $story;
        return $this;
    }

    /**
     * Get story
     *
     * @return string 
     */
    public function getStory()
    {
        return $this->story;
    }
    
    
    public function getAclaracionLink() {
    	$respuesta = "nada";
    	switch ($this->getType()) {
    		case "photo":
    			$respuesta = $this->getNameExtra();
    			$respuesta .= " Ver Foto";
    			break;
    		case "video":
    			$respuesta = "";
    			$respuesta .= "Ver video";
    			break;
    		case "status":
    			$respuesta = "";
    			break;
    		case "link":
    			$respuesta = "Link ";
    			$respuesta .= $this->getCaption();
    			break; 
    	}
    	
    	
    	return $respuesta;
    }

    /**
     * Set nameExtra
     *
     * @param string $nameExtra
     * @return Post
     */
    public function setNameExtra($nameExtra)
    {
        $this->nameExtra = $nameExtra;

        return $this;
    }

    /**
     * Get nameExtra
     *
     * @return string 
     */
    public function getNameExtra()
    {
        return $this->nameExtra;
    }


    /**
     * Set shared
     *
     * @param string $shared
     * @return Post
     */
    public function setShared($shared)
    {
        $this->shared = $shared;

        return $this;
    }

    /**
     * Get shared
     *
     * @return string 
     */
    public function getShared()
    {
        return $this->shared;
    }


    /**
     * Set actualizarLikes
     *
     * @param  $actualizarLikes
     * @return Post
     */
    public function setActualizarLikes( $actualizarLikes)
    {
        $this->actualizarLikes = $actualizarLikes;

        return $this;
    }

    /**
     * Get actualizarLikes
     *
     * @return \bool 
     */
    public function getActualizarLikes()
    {
        return $this->actualizarLikes;
    }

    /**
     * Set actualizarShared
     *
     * @param $actualizarShared
     * @return Post
     */
    public function setActualizarShared($actualizarShared)
    {
        $this->actualizarShared = $actualizarShared;

        return $this;
    }

    /**
     * Get actualizarShared
     *
     * @return \bool 
     */
    public function getActualizarShared()
    {
        return $this->actualizarShared;
    }

    /**
     * Set cantidadLikes
     *
     * @param string $cantidadLikes
     * @return Post
     */
    public function setCantidadLikes($cantidadLikes)
    {
        $this->cantidadLikes = $cantidadLikes;

        return $this;
    }

    /**
     * Get cantidadLikes
     *
     * @return string 
     */
    public function getCantidadLikes()
    {
        return $this->cantidadLikes;
    }

    /**
     * Set cantidadShared
     *
     * @param string $cantidadShared
     * @return Post
     */
    public function setCantidadShared($cantidadShared)
    {
        $this->cantidadShared = $cantidadShared;

        return $this;
    }

    /**
     * Get cantidadShared
     *
     * @return string 
     */
    public function getCantidadShared()
    {
        return $this->cantidadShared;
    }

    /**
     * Set object_id
     *
     * @param string $objectId
     * @return Post
     */
    public function setObjectId($objectId)
    {
        $this->object_id = $objectId;

        return $this;
    }

    /**
     * Get object_id
     *
     * @return string 
     */
    public function getObjectId()
    {
        return $this->object_id;
    }
}
