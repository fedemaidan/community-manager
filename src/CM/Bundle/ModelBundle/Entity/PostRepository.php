<?php 
namespace CM\Bundle\ModelBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
	
       public function findByFanPage($fanPage , $created_time = null, $limit = null) {

       		
       		$query = $this->createQueryBuilder('p');
       		$query->select('p');
       		if ($fanPage != null) {
       			$query->where('p.fanPage = ?1');
       			$query->setParameter(1,$fanPage);
       		}
       		if ($created_time) {
       			$query->andWhere('p.fechaDeCreacion < ?2');
       			$query->setParameter(2, $created_time); 
       		}
       		$query->orderBy('p.fechaDeCreacion', 'DESC');
       		
       		if ($limit != null)
       			$query->setMaxResults($limit);
       		
       		
       		return $query->getQuery()->getResult();
       }
       public function findPosts( $created_time = null, $limit = 6) {
       	 
       	$query = $this->createQueryBuilder('p');
       	$query->select('p');
       	if ($created_time) {
       		$query->andWhere('p.fechaDeCreacion < ?2');
       		$query->setParameter(2, $created_time);
       	}
       	$query->orderBy('p.fechaDeCreacion', 'DESC');
       	$query->setMaxResults($limit);
       	
       	return $query->getQuery()->getResult();
       }
       
       public function getCantidadLikes($desde,$hasta) {
       		$conn = $this->getEntityManager()->getConnection();
       		$query = "select sum(cantidadLikes) as cantidad from post where fecha_de_creacion between :desde and :hasta";
       		
       		$consulta = $conn->prepare($query);
       		$consulta->bindParam(':desde',$desde);
       		$consulta->bindParam(':hasta',$hasta);
       		
       		$consulta->execute();
       		
       	return $consulta->fetch()['cantidad'];
       
       }
       public function getCantidadShares($desde,$hasta) {
       		$conn = $this->getEntityManager()->getConnection();
       		$query = "select sum(cantidadShared) as cantidad from post where fecha_de_creacion between :desde and :hasta";
	       	 
    	   	$consulta = $conn->prepare($query);
	       	$consulta->bindParam(':desde',$desde);
    	   	$consulta->bindParam(':hasta',$hasta);
       	 
       		$consulta->execute();
       	 
       		return $consulta->fetch()['cantidad'];
       	 
       }

       
       
       public function getFBIdsPeopleWhoShareOrLikePost($ids){
       	$conn = $this->getEntityManager()->getConnection();
       
       	$my_ids = explode(', ', $ids);
       	$params = array_fill(0, count($my_ids), '?');
       	$params = implode(',', $params);
       
       	$query = "select shared, likes from post where id in ({$params})";
       
       
       	$consulta = $conn->prepare($query);
       	foreach($my_ids as $key => $id) {
       		$consulta->bindValue($key+1,$id);
       	}
       
       		
       	$consulta->execute();
       		
       	return $consulta->fetchAll();
       }
       
}
